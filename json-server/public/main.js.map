{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/animations/app.animation.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app-routing/routes.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.scss","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/directives/highlight.directive.ts","webpack:///./src/app/dishdetail/dishdetail.component.html","webpack:///./src/app/dishdetail/dishdetail.component.scss","webpack:///./src/app/dishdetail/dishdetail.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.scss","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/services/dish.service.ts","webpack:///./src/app/services/feedback.service.ts","webpack:///./src/app/services/leader.service.ts","webpack:///./src/app/services/process-httpmsg.service.ts","webpack:///./src/app/services/promotion.service.ts","webpack:///./src/app/shared/baseurl.ts","webpack:///./src/app/shared/feedback.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,qnEAAqnE,wBAAwB,WAAW,uBAAuB,2BAA2B,aAAa,GAAG,aAAa,6BAA6B,oBAAoB,8CAA8C,oBAAoB,8RAA8R,KAAK,SAAS,wB;;;;;;;;;;;ACAtoF,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEC;AACI;AAe/D;IAKE,wBAAoB,aAA4B,EACnB,OAAO;QADhB,kBAAa,GAAb,aAAa,CAAe;QACnB,YAAO,GAAP,OAAO;IAAI,CAAC;IAEzC,iCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;aAC5B,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,EAC5C,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAQ,OAAO,EAA3B,CAA2B,CAAC,CAAC;IAC9C,CAAC;IAZU,cAAc;QAb1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;YAGrB,IAAI,EAAE;gBACJ,aAAa,EAAE,MAAM;gBACrB,OAAO,EAAE,iBAAiB;aAC3B;YACD,UAAU,EAAE;gBACV,0EAAQ,EAAE;gBACV,wEAAM,EAAE;aACT;SACF,CAAC;QAOG,uEAAM,CAAC,SAAS,CAAC;yCADe,sEAAa;OALrC,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;AClB3B;AAAA;AAAA;AAAA;AAAA;AAAiF;AAE1E;IACH,OAAO,mEAAO,CAAC,YAAY,EAAE;QACzB,iEAAK,CAAC,OAAO,EAAE,iEAAK,CAAC;YACjB,SAAS,EAAE,YAAY;YACvB,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;QACH,iEAAK,CAAC,QAAQ,EAAE,iEAAK,CAAC;YAClB,SAAS,EAAE,YAAY;YACvB,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;QACH,sEAAU,CAAC,QAAQ,EAAE,mEAAO,CAAC,kBAAkB,CAAC,CAAC;KACpD,CAAC,CAAC;AACP,CAAC;AAEM;IACH,OAAO,mEAAO,CAAC,UAAU,EAAE;QACvB,iEAAK,CAAC,GAAG,EAAE,iEAAK,CAAC;YACb,SAAS,EAAE,eAAe;YAC1B,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;QACH,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC;gBACF,SAAS,EAAE,mBAAmB;gBAC9B,OAAO,EAAE,CAAC;aACb,CAAC;YACF,mEAAO,CAAC,eAAe,CAAC;SAC3B,CAAC;QACF,sEAAU,CAAC,QAAQ,EAAE;YACjB,mEAAO,CAAC,gBAAgB,EAAE,iEAAK,CAAC;gBAC5B,SAAS,EAAE,kBAAkB;gBAC7B,OAAO,EAAE,CAAC;aACb,CAAC,CAAC;SACN,CAAC;KACL,CAAC,CAAC;AACP,CAAC;AAEM;IACH,OAAO,mEAAO,CAAC,QAAQ,EAAE;QACrB,iEAAK,CAAC,GAAG,EAAE,iEAAK,CAAC;YACb,SAAS,EAAE,eAAe;YAC1B,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;QACH,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC;gBACF,SAAS,EAAE,kBAAkB;gBAC7B,OAAO,EAAE,CAAC;aACb,CAAC;YACF,mEAAO,CAAC,eAAe,EAAE,iEAAK,CAAC;gBAC3B,SAAS,EAAE,eAAe;gBAC1B,OAAO,EAAE,CAAC;aACb,CAAC,CAAC;SACN,CAAC;KACL,CAAC,CAAC;AACP,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACvDwC;AACM;AACQ;AACrB;AAYlC;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAV5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,OAAO,CAAC,8CAAM,CAAC;aAC7B;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACb7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACkB;AAClB;AACG;AACM;AAEzD,IAAM,MAAM,GAAW;IAC1B,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACxC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACxC,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,oFAAmB,EAAC;IACxD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC5C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2EAAgB,EAAC;IAChD,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;CACrD;;;;;;;;;;;;ACfD,wG;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,WAAW,CAAC;IACtB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACsC;AAClB;AACP;AACS;AACT;AACI;AACA;AACF;AACU;AACT;AACM;AAClB;AACQ;AACM;AACW;AACX;AACmB;AACtB;AAET;AAE7B;AACoC;AACkB;AACZ;AACA;AACN;AACG;AACM;AAET;AACU;AACN;AACiB;AAEP;AACX;AAEd;AACA;AAC2B;AAkDtE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhDrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,mEAAa;gBACb,qFAAmB;gBACnB,yEAAe;gBACf,yEAAe;gBACf,mEAAa;gBACb,sEAAc;gBACd,4EAAgB;gBAChB,sEAAc;gBACd,mFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,0EAAgB;gBAChB,qEAAgB;gBAChB,2DAAW;gBACX,iFAAgB;gBAChB,oEAAa;gBACb,6EAAiB;gBACjB,oEAAa;gBACb,wEAAe;gBACf,wEAAe;gBACf,gFAAkB;gBAClB,uEAAc;gBACd,6EAAiB;gBACjB,mEAAmB;gBACnB,yEAAe;gBACf,oFAAoB;gBACpB,4FAAwB;gBACxB,yEAAe;gBACf,yDAAU;gBACV,sEAAgB;aACjB;YACD,SAAS,EAAE;gBACT,mEAAW;gBACX,6EAAgB;gBAChB,uEAAa;gBACb,wFAAqB;gBACrB,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,wDAAO,EAAE;aAC1C;YACD,eAAe,EAAE;gBACf,sEAAc;aACf;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5FtB,m0CAAm0C,6BAA6B,GAAG,uBAAuB,oVAAoV,wBAAwB,mRAAmR,uBAAuB,wTAAwT,qBAAqB,8QAA8Q,oBAAoB,0ZAA0Z,SAAS,kuBAAkuB,wBAAwB,0BAA0B,uBAAuB,4BAA4B,qBAAqB,sBAAsB,oBAAoB,6BAA6B,oBAAoB,qBAAqB,0BAA0B,yBAAyB,sBAAsB,yB;;;;;;;;;;;ACAvjI,+BAA+B,eAAe,EAAE,iBAAiB,eAAe,EAAE,gBAAgB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtD;AACO;AACL;AACJ;AACI;AAe/D;IAyCE,0BAAoB,EAAe,EACzB,eAAgC;QADtB,OAAE,GAAF,EAAE,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAiB;QArC1C,gBAAW,GAAG,4DAAW,CAAC;QAG1B,qBAAgB,GAAG,IAAI,CAAC;QACxB,gBAAW,GAAG,KAAK,CAAC;QAIpB,eAAU,GAAG;YACX,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,uBAAkB,GAAG;YACnB,WAAW,EAAE;gBACX,UAAU,EAAE,yBAAyB;gBACrC,WAAW,EAAE,+CAA+C;gBAC5D,WAAW,EAAE,oDAAoD;aAClE;YACD,UAAU,EAAE;gBACV,UAAU,EAAE,wBAAwB;gBACpC,WAAW,EAAE,8CAA8C;gBAC3D,WAAW,EAAE,mDAAmD;aACjE;YACD,QAAQ,EAAE;gBACR,UAAU,EAAE,0BAA0B;gBACtC,SAAS,EAAE,wCAAwC;aACpD;YACD,OAAO,EAAE;gBACP,UAAU,EAAE,oBAAoB;gBAChC,OAAO,EAAE,4BAA4B;aACtC;SACF,CAAC;QAIA,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAED,qCAAU,GAAV;QAAA,iBAcC;QAbC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACxF,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,MAAM;YACnB,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,YAAY;aAC3B,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC,CAAC;QAEhD,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,mCAAmC;IAC5D,CAAC;IAED,yCAAc,GAAd,UAAe,IAAW;QACxB,IAAG,CAAC,IAAI,CAAC,YAAY,EAAE;YAAE,OAAO;SAAE;QAClC,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC/B,KAAK,IAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YACnC,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBACzC,yCAAyC;gBACzC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAG,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;oBAC7C,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oBAChD,KAAK,IAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;wBAChC,IAAG,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;4BACrC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;yBAC/C;qBACF;iBACF;aACF;SACF;IACH,CAAC;IAED,mCAAQ,GAAR;QAAA,iBA0BC;QAzBC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC3C,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAC7B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,UAAU,CAAC;gBACT,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC/B,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,iBAAO,IAAM,KAAI,CAAC,OAAO,GAAQ,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,MAAM;YACnB,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IApGmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;mEAAuB;IAX/B,gBAAgB;QAb5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;YAGvB,IAAI,EAAE;gBACJ,aAAa,EAAE,MAAM;gBACrB,OAAO,EAAE,iBAAiB;aAC3B;YACD,UAAU,EAAE;gBACV,0EAAQ,EAAE;gBACV,wEAAM,EAAE;aACT;SACF,CAAC;yCA0CwB,0DAAW;YACR,0EAAe;OA1C/B,gBAAgB,CAgH5B;IAAD,uBAAC;CAAA;AAhH4B;;;;;;;;;;;;;;;;;;;;;;;;;ACnBkD;AAK/E;IAEE,4BAAoB,EAAc,EACxB,QAAmB;QADT,OAAE,GAAF,EAAE,CAAY;QACxB,aAAQ,GAAR,QAAQ,CAAW;IAAI,CAAC;IAEJ,yCAAY,GAAZ;QAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;IAE2B,yCAAY,GAAZ;QAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;IAChE,CAAC;IAN2B;QAA3B,kEAAY,CAAC,YAAY,CAAC;;;;0DAE1B;IAE2B;QAA3B,kEAAY,CAAC,YAAY,CAAC;;;;0DAE1B;IAXQ,kBAAkB;QAH9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;yCAGwB,wDAAU;YACd,uDAAS;OAHlB,kBAAkB,CAa9B;IAAD,yBAAC;CAAA;AAb8B;;;;;;;;;;;;ACL/B,8ZAA8Z,uBAAuB,oGAAoG,sBAAsB,WAAW,qBAAqB,gDAAgD,kBAAkB,g2BAAg2B,iBAAiB,4CAA4C,gBAAgB,oDAAoD,gBAAgB,GAAG,qBAAqB,kKAAkK,2BAA2B,4CAA4C,0BAA0B,oDAAoD,0BAA0B,qXAAqX,qBAAqB,icAAic,sBAAsB,scAAsc,KAAK,SAAS,4B;;;;;;;;;;;ACAhyG,+BAA+B,eAAe,EAAE,iBAAiB,eAAe,EAAE,gBAAgB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9C;AACZ;AACd;AAGY;AACZ;AACyB;AACO;AAgB3E;IAcE,6BAAoB,WAAwB,EAClC,KAAqB,EACrB,QAAkB,EAClB,EAAe,EACI,OAAO;QAJhB,gBAAW,GAAX,WAAW,CAAa;QAClC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,OAAE,GAAF,EAAE,CAAa;QACI,YAAO,GAAP,OAAO;QARpC,eAAU,GAAG,OAAO,CAAC;QAYnB,eAAU,GAAG;YACX,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;SACd,CAAC;QAEF,uBAAkB,GAAG;YACnB,QAAQ,EAAE;gBACR,UAAU,EAAE,mBAAmB;gBAC/B,WAAW,EAAE,yCAAyC;gBACtD,WAAW,EAAE,8CAA8C;aAC5D;YACD,SAAS,EAAE;gBACT,UAAU,EAAE,sBAAsB;aACnC;SACF,CAAC;QAjBA,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAkBD,wCAAU,GAAV;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACtF,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,YAAY;aAC1B,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC,CAAC;QAEhD,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,mCAAmC;IAC5D,CAAC;IAED,4CAAc,GAAd,UAAe,IAAW;QACxB,IAAG,CAAC,IAAI,CAAC,WAAW,EAAE;YAAE,OAAO;SAAE;QACjC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,KAAK,IAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YACnC,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBACzC,yCAAyC;gBACzC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAG,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;oBAC7C,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oBAChD,KAAK,IAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;wBAChC,IAAG,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;4BACrC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;yBAC/C;qBACF;iBACF;aACF;SACF;IACH,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;aACpC,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EACD,iBAAO,IAAM,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,KAAI,CAAC,OAAO,GAAQ,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IAEH,sCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;aAC1B,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAc,IAAO,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,OAAO,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAClI,SAAS,CAAC,UAAC,IAAI,IAAO,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,EAClH,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAS,OAAO,EAA5B,CAA4B,CAAC,CAAC;IAC/C,CAAC;IAED,yCAAW,GAAX,UAAY,MAAc;QACxB,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAClF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACpF,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IA7FmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;qEAAsB;IAZ9B,mBAAmB;QAd/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;YAG1B,IAAI,EAAE;gBACJ,aAAa,EAAE,MAAM;gBACrB,OAAO,EAAE,iBAAiB;aAC3B;YACD,UAAU,EAAE;gBACV,4EAAU,EAAE;gBACZ,0EAAQ,EAAE;gBACV,wEAAM,EAAE;aACT;SACF,CAAC;QAmBG,uEAAM,CAAC,SAAS,CAAC;yCAJa,kEAAW;YAC3B,8DAAc;YACX,wDAAQ;YACd,0DAAW;OAjBd,mBAAmB,CA2G/B;IAAD,0BAAC;CAAA;AA3G+B;;;;;;;;;;;;ACxBhC,mlE;;;;;;;;;;;ACAA,2BAA2B,8BAA8B,qBAAqB,sBAAsB,EAAE,mBAAmB,2BAA2B,yCAAyC,EAAE,sBAAsB,2BAA2B,yCAAyC,EAAE,kBAAkB,2BAA2B,yCAAyC,EAAE,mBAAmB,2BAA2B,yCAAyC,EAAE,kBAAkB,2BAA2B,yCAAyC,EAAE,eAAe,2BAA2B,yCAAyC,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAvkB;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,i4C;;;;;;;;;;;ACAA,8BAA8B,qBAAqB,uBAAuB,wBAAwB,uBAAuB,sBAAsB,EAAE,aAAa,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtI;AACU;AACF;AAO1D;IAEE,yBAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAI,CAAC;IAEzC,kCAAQ,GAAR;IACA,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qEAAc,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAC,CAAC,CAAC;IACtE,CAAC;IATU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAG2B,2DAAS;OAFzB,eAAe,CAW3B;IAAD,sBAAC;CAAA;AAX2B;;;;;;;;;;;;ACT5B,iVAAiV,uBAAuB,kFAAkF,sBAAsB,WAAW,qBAAqB,oCAAoC,kBAAkB,2PAA2P,KAAK,aAAa,0JAA0J,4BAA4B,kFAAkF,2BAA2B,WAAW,0BAA0B,oCAAoC,uBAAuB,oQAAoQ,KAAK,cAAc,yJAAyJ,yBAAyB,GAAG,aAAa,kFAAkF,wBAAwB,WAAW,uBAAuB,oCAAoC,oBAAoB,mQAAmQ,KAAK,eAAe,0B;;;;;;;;;;;ACA1mE,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEH;AAEU;AAEN;AACI;AAe/D;IASE,uBAAoB,WAAwB,EAClC,gBAAkC,EAClC,aAA4B,EACT,OAAO;QAHhB,gBAAW,GAAX,WAAW,CAAa;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QACT,YAAO,GAAP,OAAO;IAAI,CAAC;IAEzC,gCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;aAC/B,SAAS,CAAC,UAAC,IAAI,IAAK,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,EACnC,iBAAO,IAAI,YAAI,CAAC,WAAW,GAAQ,OAAO,EAA/B,CAA+B,CAAC,CAAC;QAChD,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE;aACzC,SAAS,CAAC,UAAC,SAAS,IAAK,YAAI,CAAC,SAAS,GAAG,SAAS,EAA1B,CAA0B,EAClD,iBAAO,IAAI,YAAI,CAAC,YAAY,GAAQ,OAAO,EAAhC,CAAgC,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE;aACnC,SAAS,CAAC,UAAC,MAAM,IAAK,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,EACzC,iBAAO,IAAI,YAAI,CAAC,aAAa,GAAQ,OAAO,EAAjC,CAAiC,CAAC,CAAC;IACpD,CAAC;IAxBU,aAAa;QAbzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,IAAI,EAAE;gBACJ,aAAa,EAAE,MAAM;gBACrB,OAAO,EAAE,iBAAiB;aAC3B;YACD,UAAU,EAAE;gBACV,0EAAQ,EAAE;gBACV,wEAAM,EAAE;aACT;SACF,CAAC;QAaG,uEAAM,CAAC,SAAS,CAAC;yCAHa,kEAAW;YAChB,4EAAgB;YACnB,sEAAa;OAX3B,aAAa,CA0BzB;IAAD,oBAAC;CAAA;AA1ByB;;;;;;;;;;;;ACtB1B,gJAAgJ,kCAAkC,eAAe,ymC;;;;;;;;;;;ACAjM,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACU;AAO5D;IAQE,wBAAmB,SAAuC;QAAvC,cAAS,GAAT,SAAS,CAA8B;QAN1D,SAAI,GAAG;YACL,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,KAAK;SAChB,CAAC;IAE4D,CAAC;IAE/D,iCAAQ,GAAR;IACA,CAAC;IAED,iCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAhBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAS8B,8DAAY;OAR/B,cAAc,CAkB1B;IAAD,qBAAC;CAAA;AAlB0B;;;;;;;;;;;;ACR3B,+aAA+a,sBAAsB,WAAW,qBAAqB,sDAAsD,uBAAuB,iTAAiT,KAAK,SAAS,0B;;;;;;;;;;;ACAj3B,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkE;AAEX;AACQ;AAe/D;IAKE,uBAAoB,WAAwB,EACf,OAAO;QADhB,gBAAW,GAAX,WAAW,CAAa;QACf,YAAO,GAAP,OAAO;IAAI,CAAC;IAEzC,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;aACzB,SAAS,CAAC,UAAC,MAAM,IAAK,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,EACzC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAQ,OAAO,EAA3B,CAA2B,CAAC,CAAC;IAC9C,CAAC;IAZU,aAAa;QAbzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,IAAI,EAAE;gBACJ,aAAa,EAAE,MAAM;gBACrB,OAAO,EAAE,iBAAiB;aAC3B;YACD,UAAU,EAAE;gBACV,0EAAQ,EAAE;gBACV,wEAAM,EAAE;aACT;SACF,CAAC;QAOG,uEAAM,CAAC,SAAS,CAAC;yCADa,kEAAW;OALjC,aAAa,CAazB;IAAD,oBAAC;CAAA;AAbyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBiB;AAGoB;AACnB;AACK;AACiB;AAKlE;IAEE,qBAAqB,IAAgB,EAC3B,qBAA6C;QADlC,SAAI,GAAJ,IAAI,CAAY;QAC3B,0BAAqB,GAArB,qBAAqB,CAAwB;IAAK,CAAC;IAE7D,+BAAS,GAAT;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,uDAAO,GAAG,QAAQ,CAAC;aAC7C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,uDAAO,GAAG,SAAS,GAAG,EAAE,CAAC;aACjD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,qCAAe,GAAf;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,uDAAO,GAAG,sBAAsB,CAAC;aACzD,IAAI,CAAC,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,CAAC,CAAC,EAAT,CAAS,CAAC,CAAC;aAC9B,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;QAAA,CAAC;IAC/D,CAAC;IAED,gCAAU,GAAV;QACE,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,EAAE,EAAP,CAAO,CAAC,EAA3B,CAA2B,CAAC,CAAC;aACrE,IAAI,CAAC,iEAAU,CAAC,eAAK,IAAI,YAAK,EAAL,CAAK,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAU;QAChB,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;aACpC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,uDAAO,GAAG,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC;aACzE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAE9D,CAAC;IAnCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG2B,+DAAU;YACH,8EAAqB;OAH5C,WAAW,CAoCvB;IAAD,kBAAC;CAAA;AApCuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AAGoB;AACnB;AACK;AACiB;AAKlE;IAEE,yBAAoB,IAAgB,EAC1B,qBAA6C;QADnC,SAAI,GAAJ,IAAI,CAAY;QAC1B,0BAAqB,GAArB,qBAAqB,CAAwB;IAAI,CAAC;IAE5D,sCAAY,GAAZ,UAAa,QAAkB;QAC7B,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;aACpC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,uDAAO,GAAG,UAAU,EAAE,QAAQ,CAAC;aAC5D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAE9D,CAAC;IAdU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;YACF,8EAAqB;OAH5C,eAAe,CAe3B;IAAD,sBAAC;CAAA;AAf2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AAGQ;AACD;AACN;AACP;AAC6B;AAKlE;IAEE,uBAAqB,IAAgB,EAC3B,qBAA6C;QADlC,SAAI,GAAJ,IAAI,CAAY;QAC3B,0BAAqB,GAArB,qBAAqB,CAAwB;IAAK,CAAC;IAE7D,kCAAU,GAAV;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,uDAAO,GAAG,SAAS,CAAC;aAChD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,iCAAS,GAAT,UAAU,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,uDAAO,GAAG,UAAU,GAAG,EAAE,CAAC;aACpD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,yCAAiB,GAAjB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,uDAAO,GAAG,uBAAuB,CAAC;aAC5D,IAAI,CAAC,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,CAAC,CAAC,EAAV,CAAU,CAAC,CAAC;aAChC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;IAnBU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG2B,+DAAU;YACH,8EAAqB;OAH5C,aAAa,CAoBzB;IAAD,oBAAC;CAAA;AApByB;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiB;AACT;AAKlC;IAEE;IAAgB,CAAC;IAEV,2CAAW,GAAlB,UAAmB,KAA8B;QAC/C,IAAI,MAAc,CAAC;QAEnB,IAAG,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACpC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;SAC9B;aACI;YACH,MAAM,GAAM,KAAK,CAAC,MAAM,YAAM,KAAK,CAAC,UAAU,IAAI,EAAE,UAAI,KAAK,CAAC,KAAO,CAAC;SACvE;QAED,OAAO,uDAAU,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAfU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,qBAAqB,CAgBjC;IAAD,4BAAC;CAAA;AAhBiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AAGO;AACN;AACK;AACiB;AAKlE;IAEE,0BAAqB,IAAgB,EAC3B,qBAA6C;QADlC,SAAI,GAAJ,IAAI,CAAY;QAC3B,0BAAqB,GAArB,qBAAqB,CAAwB;IAAK,CAAC;IAE7D,wCAAa,GAAb;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,uDAAO,GAAG,YAAY,CAAC;aACtD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,uCAAY,GAAZ,UAAa,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,uDAAO,GAAG,aAAa,GAAG,EAAE,CAAC;aAC1D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,+CAAoB,GAApB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,uDAAO,GAAG,0BAA0B,CAAC;aAClE,IAAI,CAAC,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,CAAC,CAAC,EAAb,CAAa,CAAC,CAAC;aACtC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;IAnBU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG2B,+DAAU;YACH,8EAAqB;OAH5C,gBAAgB,CAoB5B;IAAD,uBAAC;CAAA;AApB4B;;;;;;;;;;;;;ACX7B;AAAA;AAAO,IAAM,OAAO,GAAG,wBAAwB,CAAC;;;;;;;;;;;;;ACAhD;AAAA;AAAA;AAAA;IAAA;IAQA,CAAC;IAAD,eAAC;AAAD,CAAC;;AAEM,IAAM,WAAW,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;;;;;;;;;;;;;ACVpD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\"\\n  fxLayout=\\\"column\\\"\\n  fxLayoutGap=\\\"10px\\\">\\n\\n  <div fxFlex>\\n    <div>\\n        <h3>About Us</h3>\\n        <hr>\\n    </div>\\n  </div>\\n\\n  <div fxFlex>\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\">\\n      <div fxFlex=\\\"70\\\">\\n        <h2>Our History</h2>\\n        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\\n        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\\n      </div>\\n      <div fxFlex=\\\"30\\\">\\n        <mat-card>\\n          <mat-card-header>\\n            <mat-card-title>\\n            <h2>Facts At a Glance</h2>\\n            </mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <dl>\\n              <dt>Started</dt>\\n              <dd>3 Feb. 2013</dd>\\n              <dt>Major Stake Holder</dt>\\n              <dd>HK Fine Foods Inc.</dd>\\n              <dt>Last Year's Turnover</dt>\\n              <dd>$1,250,375</dd>\\n              <dt>Employees</dt>\\n              <dd>40</dd>\\n            </dl>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div fxFlex>\\n    <mat-card>\\n      <blockquote>\\n        <h3>You better cut the pizza in four pieces because\\n            I'm not hungry enough to eat six.</h3>\\n        <footer>-- Yogi Berra,\\n          <cite>The Wit and Wisdom of Yogi Berra,\\n            P. Pepe, Diversion Books, 2014</cite>\\n        </footer>\\n      </blockquote>\\n    </mat-card>\\n  </div>\\n\\n\\n  <div fxFlex *ngIf=\\\"leaders\\\" [@expand]>\\n    <h2>Corporate Leadership</h2>\\n    <mat-list>\\n      <mat-list-item *ngFor=\\\"let leader of leaders\\\">\\n        <img matListAvatar src=\\\"{{BaseUrl + leader.image}}\\\" alt=\\\"{{BaseUrl + leader.name}}\\\">\\n        <h3 matLine>{{leader.name}} {{leader.abbr}}</h3>\\n        <h3 matLine>{{leader.designation}}</h3>\\n        <p matLine>\\n          <span>{{leader.description}}</span>\\n        </p>\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n  <div fxFlex [hidden]=\\\"leaders || errMess\\\">\\n    <mat-spinner></mat-spinner> <h4>Loading . . . Please Wait!</h4>\\n  </div>\\n  \\n  <div fxFlex *ngIf=\\\"errMess\\\">\\n    <h2>Error</h2>\\n    <h4 style=\\\"color: red;\\\">{{errMess}}</h4>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { Leader } from '../shared/leader';\nimport { LeaderService } from '../services/leader.service';\nimport { expand, flyInOut } from '../animations/app.animation';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n  host: {\n    '[@flyInOut]': 'true',\n    'style': 'display: block;'\n  },\n  animations: [\n    flyInOut(),\n    expand()\n  ]\n})\nexport class AboutComponent implements OnInit {\n\n  leaders: Leader[];\n  errMess: string;\n\n  constructor(private leaderService: LeaderService,\n    @Inject('BaseUrl') private BaseUrl) { }\n\n  ngOnInit() {\n    this.leaderService.getLeaders()\n      .subscribe((leaders) => this.leaders = leaders,\n        errmess => this.errMess = <any>errmess);\n  }\n\n}\n","import { trigger, state, style, animate, transition } from '@angular/animations';\r\n\r\nexport function visibility() {\r\n    return trigger('visibility', [\r\n        state('shown', style({\r\n            transform: 'scale(1.0)',\r\n            opacity: 1\r\n        })),\r\n        state('hidden', style({\r\n            transform: 'scale(0.5)',\r\n            opacity: 0\r\n        })),\r\n        transition('* => *', animate('0.5s ease-in-out'))\r\n    ]);\r\n}\r\n\r\nexport function flyInOut() {\r\n    return trigger('flyInOut', [\r\n        state('*', style({\r\n            transform: 'translateX(0)',\r\n            opacity: 1\r\n        })),\r\n        transition(':enter', [\r\n            style({ \r\n                transform: 'translateX(-100%)', \r\n                opacity: 1 \r\n            }),\r\n            animate('500ms ease-in')\r\n        ]),\r\n        transition(':leave', [\r\n            animate('500ms ease-out', style({ \r\n                transform: 'translateX(100%)', \r\n                opacity: 0 \r\n            }))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function expand() {\r\n    return trigger('expand', [\r\n        state('*', style({\r\n            transform: 'translateX(0)',\r\n            opacity: 1\r\n        })),\r\n        transition(':enter', [\r\n            style({ \r\n                transform: 'translateY(-50%)', \r\n                opacity: 0\r\n            }),\r\n            animate('200ms ease-in', style({\r\n                transform: 'translateX(0)',\r\n                opacity: 1\r\n            }))\r\n        ])\r\n    ]);\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { routes } from './routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { Routes } from '@angular/router';\r\n\r\nimport { MenuComponent } from '../menu/menu.component';\r\nimport { DishdetailComponent } from '../dishdetail/dishdetail.component';\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { AboutComponent } from '../about/about.component';\r\nimport { ContactComponent } from '../contact/contact.component';\r\n\r\nexport const routes: Routes = [\r\n    {path: 'home', component: HomeComponent},\r\n    {path: 'menu', component: MenuComponent},\r\n    {path: 'dishdetail/:id', component: DishdetailComponent},\r\n    {path: 'aboutus', component: AboutComponent},\r\n    {path: 'contactus', component: ContactComponent},\r\n    {path: '', redirectTo: '/home', pathMatch: 'full'}\r\n]","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'conFusion';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule} from '@angular/material/list';\nimport { MatGridListModule} from '@angular/material/grid-list';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule} from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\nimport 'hammerjs';\nimport { MenuComponent } from './menu/menu.component';\nimport { DishdetailComponent } from './dishdetail/dishdetail.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactComponent } from './contact/contact.component';\n\nimport { DishService } from './services/dish.service';\nimport { PromotionService } from './services/promotion.service';\nimport { LeaderService } from './services/leader.service';\nimport { ProcessHTTPMsgService } from './services/process-httpmsg.service';\n\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { LoginComponent } from './login/login.component';\n\nimport { baseUrl } from './shared/baseurl';\nimport { HttpModule } from '@angular/http';\nimport { HighlightDirective } from './directives/highlight.directive';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    DishdetailComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    AboutComponent,\n    ContactComponent,\n    LoginComponent,\n    HighlightDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    FormsModule,\n    AppRoutingModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatProgressSpinnerModule,\n    MatSliderModule,\n    HttpModule,\n    HttpClientModule\n  ],\n  providers: [\n    DishService,\n    PromotionService,\n    LeaderService,\n    ProcessHTTPMsgService,\n    { provide: 'BaseUrl', useValue: baseUrl }\n  ],\n  entryComponents: [\n    LoginComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\"\\n  fxLayout=\\\"column\\\"\\n  fxLayoutGap=\\\"10px\\\">\\n\\n  <div fxFlex>\\n    <div>\\n        <h3>Contact Us</h3>\\n        <hr>\\n    </div>\\n  </div>\\n\\n  <div fxFlex>\\n    <h3>Location Information</h3> \\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\">\\n      <div fxFlex=\\\"50\\\" fxFlexOffset=\\\"20px\\\">\\n        <h4>Our Address</h4>\\n        <address>\\n          121, Clear Water Bay Road<br>\\n          Clear Water Bay, Kowloon<br>\\n          HONG KONG<br>\\n          <i class=\\\"fa fa-phone\\\"></i>: +852 1234 5678<br>\\n          <i class=\\\"fa fa-fax\\\"></i>: +852 8765 4321<br>\\n          <i class=\\\"fa fa-envelope\\\"></i>: \\n                <a href=\\\"mailto:confusion@food.net\\\">confusion@food.net</a>\\n        </address>\\n        <p></p>\\n        <div>\\n          <a mat-raised-button href=\\\"tel:+85212345678\\\"><i class=\\\"fa fa-phone\\\"></i> Call</a>\\n          <a mat-raised-button><i class=\\\"fa fa-skype\\\"></i> Skype</a>\\n          <a mat-raised-button href=\\\"mailto:confusion@food.net\\\"><i class=\\\"fa fa-envelope-o\\\"></i> Email</a>\\n        </div>\\n        </div>\\n      <div fxFlex=\\\"40\\\">\\n        <h4>Map of our Location</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <h3>Send us your Feedback</h3>\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\" *ngIf=\\\"showFeedbackForm\\\" [@expand]>\\n    <p> {{ feedbackForm.value | json }} {{ feedbackForm.status }}</p>\\n    <form novalidate [formGroup]=\\\"feedbackForm\\\" #fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <p>\\n        <mat-form-field class=\\\"half-width\\\">\\n          <input matInput formControlName=\\\"firstname\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" required>\\n            <mat-error *ngIf=\\\"formErrors.firstname\\\">\\n              {{ formErrors.firstname }}\\n            </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"half-width\\\">\\n          <input matInput formControlName=\\\"lastname\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" required>\\n          <mat-error *ngIf=\\\"formErrors.lastname\\\">\\n            {{ formErrors.lastname }}\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n      <p>\\n        <mat-form-field class=\\\"half-width\\\">\\n          <input matInput formControlName=\\\"telnum\\\" placeholder=\\\"Tel. Number\\\" type=\\\"tel\\\" pattern=\\\"[0-9]*\\\" required>\\n          <mat-error *ngIf=\\\"formErrors.telnum\\\">\\n            {{ formErrors.telnum }}\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"half-width\\\">\\n          <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" email required>\\n          <mat-error *ngIf=\\\"formErrors.email\\\">\\n            {{ formErrors.email }}\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n      <table class=\\\"form-size\\\">\\n        <td>\\n          <mat-slide-toggle formControlName=\\\"agree\\\">May we contact you?</mat-slide-toggle>\\n        </td>\\n        <td>\\n          <mat-select placeholder=\\\"How?\\\" formControlName=\\\"contacttype\\\">\\n            <mat-option *ngFor=\\\"let ctype of contactType\\\" [value]=\\\"ctype\\\">\\n              {{ ctype }}\\n            </mat-option>\\n          </mat-select>\\n        </td>\\n      </table>\\n      <p>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <textarea matInput formControlName=\\\"message\\\" placeholder=\\\"Your Feedback\\\" \\n          rows=\\\"12\\\"></textarea>\\n        </mat-form-field>\\n      </p>\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\n      [disabled]=\\\"feedbackForm.invalid\\\">Submit</button>\\n    </form>\\n  </div>\\n  <div fxFlex *ngIf=\\\"showSpinner\\\" [@flyInOut]>\\n    <h3>Submitting Form</h3>\\n    <mat-spinner></mat-spinner> <h4>Loading . . . Please Wait!</h4>\\n  </div>\\n\\n  <div fxFlex *ngIf=\\\"feedbackCopy\\\" [@expand]>\\n    <h3>Your submission</h3>\\n    <p>First Name: {{feedbackCopy.firstname}}</p>\\n    <p>Last Name: {{feedbackCopy.lastname}}</p>\\n    <p>Tel. Number: {{feedbackCopy.telnum}}</p>\\n    <p>Email: {{feedbackCopy.email}}</p>\\n    <p>Contact You?: {{feedbackCopy.agree}}</p>\\n    <p>How?: {{feedbackCopy.contacttype}}</p>\\n    <p>Feedback: {{feedbackCopy.message}}</p>\\n  </div>\\n\\n</div>\"","module.exports = \".full-width {\\n  width: 95%; }\\n\\n.half-width {\\n  width: 45%; }\\n\\n.form-size {\\n  width: 75%; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { expand, flyInOut } from '../animations/app.animation';\nimport { Feedback, ContactType } from '../shared/feedback';\nimport { FeedbackService } from '../services/feedback.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss'],\n  host: {\n    '[@flyInOut]': 'true',\n    'style': 'display: block;'\n  },\n  animations: [\n    flyInOut(),\n    expand()\n  ]\n})\nexport class ContactComponent implements OnInit {\n\n  feedbackForm: FormGroup;\n  feedback: Feedback;\n  feedbackCopy: Feedback;\n  contactType = ContactType;\n  errMess: string;\n  \n  showFeedbackForm = true;\n  showSpinner = false;\n\n  @ViewChild('fform') feedbackFormDirective;\n\n  formErrors = {\n    'firstname': '',\n    'lastname': '',\n    'telnum': '',\n    'email': '' \n  };\n\n  validationMessages = {\n    'firstname': {\n      'required': 'First name is required.',\n      'minlength': 'First name must be atleast 2 characters long.',\n      'maxlength': 'First name cannot be more than 25 characters long.'\n    },\n    'lastname': {\n      'required': 'Last name is required.',\n      'minlength': 'Last name must be atleast 2 characters long.',\n      'maxlength': 'Last name cannot be more than 25 characters long.'\n    },\n    'telnum': {\n      'required': 'Tel. Number is required.',\n      'pattern': 'Tel. Number must contain only numbers.'\n    },\n    'email': {\n      'required': 'Email is required.',\n      'email': 'Email not in valid format.'\n    } \n  };\n\n  constructor(private fb: FormBuilder,\n    private feedbackService: FeedbackService) { \n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.feedbackForm = this.fb.group({\n      firstname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)]],\n      lastname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)]],\n      telnum: [0, [Validators.required, Validators.pattern]],\n      email: ['', [Validators.required, Validators.email]],\n      agree: false,\n      contacttype: 'None',\n      message: ''\n    });\n    this.feedbackForm.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged(); // (re)set form validation messages\n  }\n\n  onValueChanged(data? : any) {\n    if(!this.feedbackForm) { return; }\n    const form = this.feedbackForm;\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        // clear previous error messages (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if(control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if(control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onSubmit() {\n    this.feedback = this.feedbackForm.value;\n    console.log(this.feedback);\n    this.showFeedbackForm = false;\n    this.showSpinner = true;\n    this.feedbackService.postFeedback(this.feedback)\n        .subscribe(feedback => {\n          this.showSpinner = false;\n          this.feedbackCopy = feedback;\n          this.feedback = null;\n          setTimeout(() => {\n            this.feedbackCopy = null;\n            this.showFeedbackForm = true;\n          }, 5000);\n        },\n        errmess => { this.errMess = <any>errmess; });\n    this.feedbackFormDirective.resetForm();\n    this.feedbackForm.reset({\n      firstname: '',\n      lastname: '',\n      telnum: 0,\n      email: '',\n      agree: false,\n      contacttype: 'None',\n      message: ''\n    });  \n  }\n}\n","import { Directive, ElementRef, Renderer2, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n\n  constructor(private el: ElementRef,\n    private renderer: Renderer2) { }\n\n    @HostListener('mouseenter') onmouseenter() {\n      this.renderer.addClass(this.el.nativeElement, 'highlight');\n    }\n\n    @HostListener('mouseleave') onmouseleave() {\n      this.renderer.removeClass(this.el.nativeElement, 'highlight');\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\"\\n    fxLayout=\\\"row\\\"\\n    fxLayout.sm=\\\"column\\\"\\n    fxLayout.xs=\\\"column\\\"\\n    fxLayoutAlign.gt-md=\\\"space-around center\\\"\\n    fxLayoutGap=\\\"10px\\\" \\n    fxLayoutGap.xs=\\\"0\\\">\\n  \\n    <div fxFlex=\\\"40\\\" *ngIf=\\\"dish\\\" [@visibility]=\\\"visibility\\\" [@expand]>\\n      <mat-card>\\n        <mat-card-header>\\n          <mat-card-title>\\n            <h3 *ngIf=\\\"dish\\\">{{dish.name | uppercase}}</h3>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <img mat-card-image src=\\\"{{BaseUrl + dish.image}}\\\" alt=\\\"{{BaseUrl + dish.name}}\\\">\\n        <mat-card-content>\\n          <p>{{dish.description}}</p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-button [routerLink]=\\\"['/dishdetail', prev]\\\">\\n            <span class=\\\"fa fa-chevron-left fa-lg\\\"></span>\\n          </button>\\n          <button mat-button (click)=\\\"goBack()\\\">BACK</button>\\n          <button mat-button>LIKE</button>\\n          <button mat-button>SHARE</button>\\n          <span class=\\\"flex-spacer\\\">\\n            <button mat-button [routerLink]=\\\"['/dishdetail', next]\\\">\\n              <span class=\\\"fa fa-chevron-right fa-lg\\\"></span>\\n            </button>\\n          </span>\\n        </mat-card-actions>\\n      </mat-card>  \\n  </div>\\n  <div fxFlex=\\\"40\\\" *ngIf=\\\"dish\\\" [@visibility]=\\\"visibility\\\" [@expand]>\\n    <h3> Comments </h3>\\n      <mat-list>\\n        <mat-list-item *ngFor=\\\"let comment of dish.comments\\\">\\n          <p matLine> <span>{{comment.comment}}</span> </p>\\n          <p matLine> <span>{{comment.rating}} stars</span> </p>\\n          <p matLine> <span>--{{comment.author}} {{comment.date | date}}</span> </p>\\n        </mat-list-item>\\n      </mat-list>\\n\\n      <mat-list>\\n        <mat-list-item *ngIf=\\\"commentForm.valid\\\">\\n          <p matLine> <span>{{commentForm.value.comment}}</span> </p>\\n          <p matLine> <span>{{commentForm.value.rating}} stars</span> </p>\\n          <p matLine> <span>--{{commentForm.value.author}}</span> </p>\\n        </mat-list-item>\\n      </mat-list>  \\n    <form novalidate [formGroup]=\\\"commentForm\\\" #cform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <p>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput formControlName=\\\"author\\\" placeholder=\\\"Name\\\" type=\\\"text\\\">\\n            <mat-error *ngIf=\\\"formErrors.author\\\">\\n              {{ formErrors.author }}\\n            </mat-error>\\n        </mat-form-field>\\n      </p>\\n      <p>\\n        <mat-slider formControlName=\\\"rating\\\" thumbLabel min=\\\"1\\\" max=\\\"5\\\" step=\\\"1\\\" tickInterval=\\\"1\\\"></mat-slider>\\n      </p>\\n      <p>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <textarea matInput formControlName=\\\"comment\\\" placeholder=\\\"Your Comment\\\" rows=\\\"12\\\"> </textarea>\\n          <mat-error *ngIf=\\\"formErrors.comment\\\">\\n            {{ formErrors.comment }}\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\n      [disabled]=\\\"commentForm.invalid\\\">Submit</button>\\n    </form>\\n\\n  </div>\\n      \\n\\n  <div fxFlex [hidden]=\\\"dish || errMess\\\">\\n    <mat-spinner></mat-spinner> <h4>Loading . . . Please Wait!</h4>\\n  </div>\\n\\n  <div fxFlex *ngIf=\\\"errMess\\\">\\n    <h2>Error</h2>\\n    <h4 style=\\\"color: red;\\\">{{errMess}}</h4>\\n  </div>\\n  \\n</div>\"","module.exports = \".full-width {\\n  width: 95%; }\\n\\n.half-width {\\n  width: 45%; }\\n\\n.form-size {\\n  width: 75%; }\\n\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Dish } from '../shared/dish';\nimport { Comment } from '../shared/comment';\nimport { DishService } from '../services/dish.service';\nimport { switchMap } from 'rxjs/operators';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { expand, flyInOut, visibility } from '../animations/app.animation';\n\n@Component({\n  selector: 'app-dishdetail',\n  templateUrl: './dishdetail.component.html',\n  styleUrls: ['./dishdetail.component.scss'],\n  host: {\n    '[@flyInOut]': 'true',\n    'style': 'display: block;'\n  },\n  animations: [\n    visibility(),\n    flyInOut(),\n    expand()\n  ]\n})\nexport class DishdetailComponent implements OnInit {\n\n  commentForm: FormGroup;\n  comment: Comment;\n  dish: Dish;\n  dishIds: string[];\n  prev: string;\n  next: string; \n  errMess: string;\n  dishCopy: Dish;\n  visibility = 'shown';\n\n  @ViewChild('cform') commentFormDirective;\n\n  constructor(private dishService: DishService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private fb: FormBuilder,\n    @Inject('BaseUrl') private BaseUrl) {\n      this.createForm();\n    }\n\n    formErrors = {\n      'author': '',\n      'comment': ''\n    };\n  \n    validationMessages = {\n      'author': {\n        'required': 'Name is required.',\n        'minlength': 'Name must be atleast 2 characters long.',\n        'maxlength': 'Name cannot be more than 25 characters long.'\n      },\n      'comment': {\n        'required': 'Comment is required.',\n      },\n    };\n  \n    createForm() {\n      this.commentForm = this.fb.group({\n        author: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)]],\n        rating: 5,\n        comment: ['', Validators.required]\n      });\n      this.commentForm.valueChanges\n        .subscribe(data => this.onValueChanged(data));\n  \n      this.onValueChanged(); // (re)set form validation messages\n    }\n  \n    onValueChanged(data? : any) {\n      if(!this.commentForm) { return; }\n      const form = this.commentForm;\n      for (const field in this.formErrors) {\n        if (this.formErrors.hasOwnProperty(field)) {\n          // clear previous error messages (if any)\n          this.formErrors[field] = '';\n          const control = form.get(field);\n          if(control && control.dirty && !control.valid) {\n            const messages = this.validationMessages[field];\n            for (const key in control.errors) {\n              if(control.errors.hasOwnProperty(key)) {\n                this.formErrors[field] += messages[key] + ' ';\n              }\n            }\n          }\n        }\n      }\n    }\n  \n    onSubmit() {\n      this.comment = this.commentForm.value;\n      this.comment['date'] = new Date().toISOString();\n      this.dishCopy.comments.push(this.comment);\n      this.dishService.putDish(this.dishCopy)\n        .subscribe(dish => {\n          this.dish = dish;\n          this.dishCopy = dish;\n        },\n        errmess => { this.dish = null; this.dishCopy = null; this.errMess = <any>errmess; });\n      console.log(this.comment);\n      this.commentFormDirective.resetForm();\n      this.commentForm.reset({\n        author: '',\n        rating: 5,\n        comment: ''\n      });\n    }\n  \n  ngOnInit() {\n    this.dishService.getDishIds()\n      .subscribe((dishIds) => this.dishIds = dishIds);\n    this.route.params.pipe(switchMap((params: Params) => { this.visibility = 'hidden'; return this.dishService.getDish(params['id']); }))\n      .subscribe((dish) => { this.dish = dish; this.dishCopy=dish; this.setPrevNext(dish.id); this.visibility = 'shown'; },\n        errmess => this.errMess = <any> errmess);\n  }\n\n  setPrevNext(dishId: string) {\n    const index = this.dishIds.indexOf(dishId);\n    this.prev = this.dishIds[(this.dishIds.length + index - 1) % this.dishIds.length];\n    this.next = this.dishIds[(this.dishIds.length + index + 1) % this.dishIds.length];\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","module.exports = \"<div class=\\\"container footer\\\" \\n    fxLayout=\\\"row wrap\\\" \\n    fxLayout.lt-md=\\\"column\\\" \\n    fxLayoutAlign=\\\"center center\\\" \\n    fxLayoutGap=\\\"10px\\\">\\n\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n    <div fxLayout=\\\"row\\\">\\n      <div fxFlex=\\\"40\\\" fxFlexOffset=\\\"20px\\\">\\n        <h4>Links</h4>\\n        <mat-list>\\n          <mat-list-item routerLink='/home'><a mat-button>Home</a></mat-list-item>\\n          <mat-list-item routerLink='/aboutus'><a mat-button>About</a></mat-list-item>\\n          <mat-list-item routerLink='/menu'><a mat-button>Menu</a></mat-list-item>\\n          <mat-list-item routerLink='/contactus'><a mat-button>Contact</a></mat-list-item>\\n        </mat-list>\\n      </div>\\n      <div fxFlex=\\\"55\\\">\\n        <h4>Our Address</h4>\\n        <address style=\\\"text-size: 80%\\\">\\n          121, Clear Water Bay Road<br> Clear Water Bay, Kowloon<br> HONG KONG<br>\\n          <i class=\\\"fa fa-phone\\\"></i>: +852 1234 5678<br>\\n          <i class=\\\"fa fa-fax\\\"></i>: +852 8765 4321<br>\\n          <i class=\\\"fa fa-envelope\\\"></i>:\\n          <a href=\\\"mailto:confusion@food.net\\\">confusion@food.net</a>\\n        </address>\\n      </div>\\n    </div>\\n  </div>\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"45\\\">\\n    <div style=\\\"text-align:center\\\">\\n      <a mat-icon-button class=\\\"btn-google-plus\\\" href=\\\"http://google.com/+\\\"><i class=\\\"fa fa-google-plus fa-lg\\\"></i></a>\\n      <a mat-icon-button class=\\\"btn-facebook\\\" href=\\\"http://www.facebook.com/profile.php?id=\\\"><i class=\\\"fa fa-facebook fa-lg\\\"></i></a>\\n      <a mat-icon-button class=\\\"btn-linkedin\\\" href=\\\"http://www.linkedin.com/in/\\\"><i class=\\\"fa fa-linkedin fa-lg\\\"></i></a>\\n      <a mat-icon-button class=\\\"btn-twitter\\\" href=\\\"http://twitter.com/\\\"><i class=\\\"fa fa-twitter fa-lg\\\"></i></a>\\n      <a mat-icon-button class=\\\"btn-youtube\\\" href=\\\"http://youtube.com/\\\"><i class=\\\"fa fa-youtube fa-lg\\\"></i></a>\\n      <a mat-icon-button class=\\\"btn-mail\\\" href=\\\"mailto:\\\"><i class=\\\"fa fa-envelope-o fa-lg\\\"></i></a>\\n    </div>\\n  </div>\\n  <div>\\n      <p>© Copyright 2018 Ristorante Con Fusion</p>\\n  </div>\\n</div>\"","module.exports = \".footer {\\n  background-color: #D1C4E9;\\n  margin: 0px auto;\\n  padding: 20px 0px; }\\n\\n.btn-facebook {\\n  color: #fff !important;\\n  background-color: #3b5998 !important; }\\n\\n.btn-google-plus {\\n  color: #fff !important;\\n  background-color: #dd4b39 !important; }\\n\\n.btn-youtube {\\n  color: #fff !important;\\n  background-color: #ff4b39 !important; }\\n\\n.btn-linkedin {\\n  color: #fff !important;\\n  background-color: #007bb6 !important; }\\n\\n.btn-twitter {\\n  color: #fff !important;\\n  background-color: #55acee !important; }\\n\\n.btn-mail {\\n  color: #fff !important;\\n  background-color: #512DA8 !important; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span><img src=\\\"/assets/images/logo.png\\\" height=30 width=41></span>\\n  <a mat-button routerLink='/home' routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-home fa-lg\\\"></span> Home</a>\\n  <a mat-button routerLink='/aboutus' routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-info fa-lg\\\"></span> About</a>\\n  <a mat-button routerLink='/menu' routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-list fa-lg\\\"></span> Menu</a>\\n  <a mat-button routerLink='/contactus' routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-address-card fa-lg\\\"></span> Contact</a>\\n  <span class=\\\"flex-spacer\\\"></span>\\n  <a mat-button (click)=\\\"openLoginForm()\\\"><span class=\\\"fa fa-sign-in fa-lg\\\"> Login</span></a>\\n</mat-toolbar>\\n\\n<div class=\\\"container jumbotron\\\"\\n    fxLayout=\\\"row\\\"\\n    fxLayout.sm=\\\"column\\\" \\n    fxLayout.xs=\\\"column\\\" \\n    fxLayoutAlign.xs=\\\"start center\\\"\\n    fxLayoutAlign.sm=\\\"start center\\\" \\n    fxLayoutAlign.gt-sm=\\\"center center\\\" \\n    fxLayoutGap=\\\"10px\\\">\\n\\n  <div fxFlex fxFlex.gt-sm=\\\"50%\\\">\\n    <h1>Ristorante Con Fusion</h1>\\n    <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations\\n      will tickle your culinary senses!</p>\\n  </div>\\n  <div fxFlex fxFlex.gt-sm=\\\"20%\\\">\\n    <img src=\\\"/assets/images/logo.png\\\" alt=\\\"Logo\\\">\\n  </div>\\n  <div fxFlex></div>\\n</div>\"","module.exports = \".jumbotron {\\n  margin: 0px auto;\\n  padding: 70px 30px;\\n  background: #9575CD;\\n  color: floralwhite;\\n  min-height: 150px; }\\n\\n.active {\\n  background: #4527A0; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { LoginComponent } from '../login/login.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  openLoginForm() {\n    this.dialog.open(LoginComponent, {width: '500px', height: '450px'});\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\"\\n     fxLayout=\\\"row\\\"\\n     fxLayout.sm=\\\"column\\\"\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign.gt-md=\\\"space-around center\\\"\\n     fxLayoutGap=\\\"10px\\\">\\n\\n<mat-card *ngIf=\\\"dish\\\" fxFlex [@expand]>\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>\\n      <h3>{{dish.name | uppercase}}</h3>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"{{BaseUrl + dish.image}}\\\" alt=\\\"{{BaseUrl + dish.name}}\\\">\\n  <mat-card-content>\\n    <p>{{dish.description}}\\n    </p>\\n  </mat-card-content>\\n</mat-card>\\n\\n<div fxFlex [hidden]=\\\"dish || dishErrMess\\\">\\n  <mat-spinner></mat-spinner> <h4>Loading . . . Please Wait!</h4>\\n</div>\\n<div fxFlex *ngIf=\\\"dishErrMess\\\">\\n  <h2>Error</h2>\\n  <h4 style=\\\"color: red;\\\">{{dishErrMess}}</h4>\\n</div>\\n\\n<mat-card *ngIf=\\\"promotion\\\" fxFlex [@expand]>\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>\\n      <h3>{{promotion.name | uppercase}}</h3>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"{{BaseUrl + promotion.image}}\\\" alt=\\\"{{BaseUrl + promotion.name}}\\\">\\n  <mat-card-content>\\n    <p>{{promotion.description}}\\n    </p>\\n  </mat-card-content>\\n</mat-card>\\n\\n<div fxFlex [hidden]=\\\"promotion || promoErrMess\\\">\\n  <mat-spinner></mat-spinner> <h4>Loading . . . Please Wait!</h4>\\n</div>\\n\\n<div fxFlex *ngIf=\\\"promoErrMess\\\">\\n  <h2>Error</h2>\\n  <h4 style=\\\"color: red;\\\">{{promoErrMess}}</h4>\\n</div>\\n\\n\\n<mat-card *ngIf=\\\"leader\\\" fxFlex [@expand]>\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>\\n      <h3>{{leader.name | uppercase}} {{leader.abbr}}</h3>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"{{BaseUrl + leader.image}}\\\" alt=\\\"{{BaseUrl + leader.name}}\\\">\\n  <mat-card-content>\\n    <p>{{leader.description}}\\n    </p>\\n  </mat-card-content>\\n</mat-card>\\n\\n<div fxFlex [hidden]=\\\"leader || leaderErrMess\\\">\\n  <mat-spinner></mat-spinner> <h4>Loading . . . Please Wait!</h4>\\n</div>\\n\\n<div fxFlex *ngIf=\\\"keaderErrMess\\\">\\n  <h2>Error</h2>\\n  <h4 style=\\\"color: red;\\\">{{keaderErrMess}}</h4>\\n</div>\\n\\n\\n</div>\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { Dish } from '../shared/dish';\nimport { DishService } from '../services/dish.service';\nimport { Promotion } from '../shared/promotion';\nimport { PromotionService } from '../services/promotion.service';\nimport { Leader } from '../shared/leader';\nimport { LeaderService } from '../services/leader.service';\nimport { flyInOut, expand } from '../animations/app.animation';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  host: {\n    '[@flyInOut]': 'true',\n    'style': 'display: block;'\n  },\n  animations: [\n    flyInOut(),\n    expand()\n  ]\n})\nexport class HomeComponent implements OnInit {\n\n  dish: Dish;\n  promotion: Promotion;\n  leader: Leader;\n  dishErrMess: string;\n  leaderErrMess: string;\n  promoErrMess: string;\n\n  constructor(private dishService: DishService,\n    private promotionService: PromotionService,\n    private leaderService: LeaderService,\n    @Inject('BaseUrl') private BaseUrl) { }\n\n  ngOnInit() {\n    this.dishService.getFeaturedDish()\n      .subscribe((dish) => this.dish = dish,\n        errmess => this.dishErrMess = <any>errmess);\n    this.promotionService.getFeaturedPromotion()\n      .subscribe((promotion) => this.promotion = promotion,\n        errmess => this.promoErrMess = <any>errmess);\n    this.leaderService.getFeaturedLeader()\n      .subscribe((leader) => this.leader = leader,\n        errmess => this.leaderErrMess = <any>errmess);\n  }\n\n}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  Login\\n  <span class=\\\"flex-spacer\\\"></span>\\n  <button mat-button mat-dialog-close>&times;</button>\\n</mat-toolbar>\\n\\n<p>{{ user | json }}</p>\\n\\n<form novalidate #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <mat-dialog-content>\\n    <p>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Username\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" \\n        #username=\\\"ngModel\\\" required>\\n        <mat-error *ngIf=\\\"username.errors?.required\\\">Username is required</mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\"\\n        #password=\\\"ngModel\\\" required>\\n        <mat-error *ngIf=\\\"password.errors?.required\\\">Password is required</mat-error>\\n      </mat-form-field>\\n      <mat-checkbox [(ngModel)]=\\\"user.remember\\\" name=\\\"remember\\\">Remember Me</mat-checkbox>\\n    </p>\\n  </mat-dialog-content>\\n  <mat-dialog-actions>\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>Cancel</button>\\n    <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" \\n    [disabled]=\\\"loginForm.form.invalid\\\">Login</button>\\n  </mat-dialog-actions>\\n</form>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user = {\n    username: '',\n    password: '',\n    remember: false\n  };\n\n  constructor(public dialogRef: MatDialogRef<LoginComponent>) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    console.log('User: ', this.user);\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\" \\n     fxLayout=\\\"column\\\" \\n     fxLayoutGap=\\\"10px\\\"> \\n\\n  <div fxFlex>\\n    <div>\\n      <h3>Menu</h3>\\n      <hr>\\n    </div>\\n  </div>\\n  \\n  <div fxFlex *ngIf=\\\"dishes\\\" [@expand]>\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"200px\\\"> \\n      <mat-grid-tile *ngFor=\\\"let dish of dishes\\\" [routerLink]=\\\"['/dishdetail', dish.id]\\\" appHighlight>\\n        <img height=\\\"200px\\\" src=\\\"{{BaseUrl + dish.image}}\\\" alt=\\\"{{BaseUrl + dish.name}}\\\">\\n        <mat-grid-tile-footer>\\n          <h1> {{dish.name | uppercase}}</h1>\\n        </mat-grid-tile-footer>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </div>\\n\\n  <div fxFlex [hidden]=\\\"dishes || errMess\\\">\\n    <mat-spinner></mat-spinner> <h4>Loading . . . Please Wait!</h4>\\n  </div>\\n  <div fxFlex *ngIf=\\\"errMess\\\">\\n    <h2>Error</h2>\\n    <h4 style=\\\"color: red;\\\">{{errMess}}</h4>\\n  </div>\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit, inject, Inject } from '@angular/core';\nimport { Dish } from '../shared/dish';\nimport { DishService } from '../services/dish.service';\nimport { flyInOut, expand } from '../animations/app.animation';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  host: {\n    '[@flyInOut]': 'true',\n    'style': 'display: block;'\n  },\n  animations: [\n    flyInOut(),\n    expand()\n  ]\n})\nexport class MenuComponent implements OnInit {\n\n  dishes: Dish[];\n  errMess: string;\n\n  constructor(private dishService: DishService,\n    @Inject('BaseUrl') private BaseUrl) { }\n\n  ngOnInit() {\n    this.dishService.getDishes()\n      .subscribe((dishes) => this.dishes = dishes,\n        errmess => this.errMess = <any>errmess);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Dish } from '../shared/dish';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseUrl } from '../shared/baseurl';\nimport { catchError, map } from 'rxjs/operators';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DishService {\n\n  constructor( private http: HttpClient,\n    private processHTTPMsgService : ProcessHTTPMsgService ) { }\n\n  getDishes(): Observable<Dish[]> {\n    return this.http.get<Dish[]>(baseUrl + 'dishes')\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getDish(id: string): Observable<Dish> {\n    return this.http.get<Dish>(baseUrl + 'dishes/' + id)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getFeaturedDish(): Observable<Dish> {\n    return this.http.get<Dish>(baseUrl + 'dishes?featured=true')\n      .pipe(map(dishes => dishes[0]))\n      .pipe(catchError(this.processHTTPMsgService.handleError));;\n  }\n\n  getDishIds(): Observable<string[] | any> {\n    return this.getDishes().pipe(map(dishes => dishes.map(dish => dish.id)))\n      .pipe(catchError(error => error));\n  }\n\n  putDish(dish: Dish): Observable<Dish> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.put<Dish>(baseUrl + 'dishes/' + dish.id, dish, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Feedback } from '../shared/feedback';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseUrl } from '../shared/baseurl';\nimport { catchError, map } from 'rxjs/operators';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(private http: HttpClient,\n    private processHTTPMsgService : ProcessHTTPMsgService) { }\n\n  postFeedback(feedback: Feedback): Observable<Feedback> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post<Feedback>(baseUrl + 'feedback', feedback)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  \n  }    \n}\n","import { Injectable } from '@angular/core';\nimport { Leader } from '../shared/leader';\nimport { Observable, of } from 'rxjs';\nimport { catchError, delay } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { baseUrl } from '../shared/baseurl';\nimport { map } from 'rxjs/operators';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaderService {\n\n  constructor( private http: HttpClient,\n    private processHTTPMsgService : ProcessHTTPMsgService ) { }\n\n  getLeaders(): Observable<Leader[]> {\n    return this.http.get<Leader[]>(baseUrl + 'leaders')\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getLeader(id: string): Observable<Leader> {\n    return this.http.get<Leader>(baseUrl + 'leaders/' + id)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getFeaturedLeader(): Observable<Leader> {\n    return this.http.get<Leader>(baseUrl + 'leaders?featured=true')\n      .pipe(map(leaders => leaders[0]))\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessHTTPMsgService {\n\n  constructor() { }\n\n  public handleError(error: HttpErrorResponse | any) {\n    let errMsg: string;\n\n    if(error.error instanceof ErrorEvent) {\n      errMsg = error.error.message; \n    }\n    else {\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\n    }\n\n    return throwError(errMsg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Promotion } from '../shared/promotion';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { baseUrl } from '../shared/baseurl';\nimport { catchError, map } from 'rxjs/operators';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PromotionService {\n\n  constructor( private http: HttpClient,\n    private processHTTPMsgService : ProcessHTTPMsgService ) { }\n\n  getPromotions(): Observable<Promotion[]> {\n    return this.http.get<Promotion[]>(baseUrl + 'promotions')\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getPromotion(id: string): Observable<Promotion> {\n    return this.http.get<Promotion>(baseUrl + 'promotions/' + id)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getFeaturedPromotion(): Observable<Promotion> {\n    return this.http.get<Promotion>(baseUrl + 'promotions?featured=true')\n      .pipe(map(promotions => promotions[0]))\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n}\n","export const baseUrl = 'http://localhost:3000/';","export class Feedback {\r\n    firstname: string;\r\n    lastname: string;\r\n    telnum: number;\r\n    email: string;\r\n    agree: boolean;\r\n    contacttype: string;\r\n    message: string;\r\n}\r\n\r\nexport const ContactType = ['None', 'Tel', 'Email'];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}